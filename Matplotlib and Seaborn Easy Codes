{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2021-08-15T04:51:15.065520Z","iopub.execute_input":"2021-08-15T04:51:15.065941Z","iopub.status.idle":"2021-08-15T04:51:16.232453Z","shell.execute_reply.started":"2021-08-15T04:51:15.065901Z","shell.execute_reply":"2021-08-15T04:51:16.231360Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"/kaggle/input/fifa-21-complete-player-dataset/players_15.csv\n/kaggle/input/fifa-21-complete-player-dataset/players_16.csv\n/kaggle/input/fifa-21-complete-player-dataset/players_17.csv\n/kaggle/input/fifa-21-complete-player-dataset/players_18.csv\n/kaggle/input/fifa-21-complete-player-dataset/players_19.csv\n/kaggle/input/fifa-21-complete-player-dataset/players_21.csv\n/kaggle/input/fifa-21-complete-player-dataset/Career Mode player datasets - FIFA 15-21.xlsx\n/kaggle/input/fifa-21-complete-player-dataset/players_20.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df_fifa21 = pd.read_csv('/kaggle/input/fifa-21-complete-player-dataset/players_20.csv')\ncountry = ['United States', 'Canada', 'England', 'Brazil', 'Argentina']\ndf_country = df_fifa21[df_fifa21['nationality'].isin(country)]","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:42:55.417162Z","iopub.execute_input":"2021-08-15T04:42:55.417854Z","iopub.status.idle":"2021-08-15T04:42:56.324079Z","shell.execute_reply.started":"2021-08-15T04:42:55.417780Z","shell.execute_reply":"2021-08-15T04:42:56.322786Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df_fifa21.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T03:28:39.700907Z","iopub.execute_input":"2021-08-15T03:28:39.701442Z","iopub.status.idle":"2021-08-15T03:28:39.752673Z","shell.execute_reply.started":"2021-08-15T03:28:39.701398Z","shell.execute_reply":"2021-08-15T03:28:39.751663Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_country.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:04:45.075942Z","iopub.execute_input":"2021-08-15T04:04:45.076672Z","iopub.status.idle":"2021-08-15T04:04:45.113148Z","shell.execute_reply.started":"2021-08-15T04:04:45.076621Z","shell.execute_reply":"2021-08-15T04:04:45.111984Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"    sofifa_id                                         player_url short_name  \\\n0      158023  https://sofifa.com/player/158023/lionel-messi/...   L. Messi   \n2      190871  https://sofifa.com/player/190871/neymar-da-sil...  Neymar Jr   \n12     202126  https://sofifa.com/player/202126/harry-kane/20...    H. Kane   \n13     212831  https://sofifa.com/player/212831/alisson-ramse...    Alisson   \n17     153079  https://sofifa.com/player/153079/sergio-aguero...  S. Agüero   \n\n                            long_name  age         dob  height_cm  weight_kg  \\\n0      Lionel Andrés Messi Cuccittini   32  1987-06-24        170         72   \n2       Neymar da Silva Santos Júnior   27  1992-02-05        175         68   \n12                         Harry Kane   25  1993-07-28        188         89   \n13              Alisson Ramsés Becker   26  1992-10-02        191         91   \n17  Sergio Leonel Agüero del Castillo   31  1988-06-02        173         70   \n\n   nationality            club_name  ...   lwb   ldm   cdm   rdm   rwb    lb  \\\n0    Argentina         FC Barcelona  ...  68+6  66+6  66+6  66+6  68+6  63+6   \n2       Brazil  Paris Saint-Germain  ...  67+6  61+6  61+6  61+6  67+6  61+6   \n12     England    Tottenham Hotspur  ...  65+3  66+3  66+3  66+3  65+3  62+3   \n13      Brazil            Liverpool  ...  31+3  35+3  35+3  35+3  31+3  30+3   \n17   Argentina      Manchester City  ...  61+3  58+3  58+3  58+3  61+3  57+3   \n\n     lcb    cb   rcb    rb  \n0   53+6  53+6  53+6  63+6  \n2   47+6  47+6  47+6  61+6  \n12  61+3  61+3  61+3  62+3  \n13  30+3  30+3  30+3  30+3  \n17  51+3  51+3  51+3  57+3  \n\n[5 rows x 106 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sofifa_id</th>\n      <th>player_url</th>\n      <th>short_name</th>\n      <th>long_name</th>\n      <th>age</th>\n      <th>dob</th>\n      <th>height_cm</th>\n      <th>weight_kg</th>\n      <th>nationality</th>\n      <th>club_name</th>\n      <th>...</th>\n      <th>lwb</th>\n      <th>ldm</th>\n      <th>cdm</th>\n      <th>rdm</th>\n      <th>rwb</th>\n      <th>lb</th>\n      <th>lcb</th>\n      <th>cb</th>\n      <th>rcb</th>\n      <th>rb</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>158023</td>\n      <td>https://sofifa.com/player/158023/lionel-messi/...</td>\n      <td>L. Messi</td>\n      <td>Lionel Andrés Messi Cuccittini</td>\n      <td>32</td>\n      <td>1987-06-24</td>\n      <td>170</td>\n      <td>72</td>\n      <td>Argentina</td>\n      <td>FC Barcelona</td>\n      <td>...</td>\n      <td>68+6</td>\n      <td>66+6</td>\n      <td>66+6</td>\n      <td>66+6</td>\n      <td>68+6</td>\n      <td>63+6</td>\n      <td>53+6</td>\n      <td>53+6</td>\n      <td>53+6</td>\n      <td>63+6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>190871</td>\n      <td>https://sofifa.com/player/190871/neymar-da-sil...</td>\n      <td>Neymar Jr</td>\n      <td>Neymar da Silva Santos Júnior</td>\n      <td>27</td>\n      <td>1992-02-05</td>\n      <td>175</td>\n      <td>68</td>\n      <td>Brazil</td>\n      <td>Paris Saint-Germain</td>\n      <td>...</td>\n      <td>67+6</td>\n      <td>61+6</td>\n      <td>61+6</td>\n      <td>61+6</td>\n      <td>67+6</td>\n      <td>61+6</td>\n      <td>47+6</td>\n      <td>47+6</td>\n      <td>47+6</td>\n      <td>61+6</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>202126</td>\n      <td>https://sofifa.com/player/202126/harry-kane/20...</td>\n      <td>H. Kane</td>\n      <td>Harry Kane</td>\n      <td>25</td>\n      <td>1993-07-28</td>\n      <td>188</td>\n      <td>89</td>\n      <td>England</td>\n      <td>Tottenham Hotspur</td>\n      <td>...</td>\n      <td>65+3</td>\n      <td>66+3</td>\n      <td>66+3</td>\n      <td>66+3</td>\n      <td>65+3</td>\n      <td>62+3</td>\n      <td>61+3</td>\n      <td>61+3</td>\n      <td>61+3</td>\n      <td>62+3</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>212831</td>\n      <td>https://sofifa.com/player/212831/alisson-ramse...</td>\n      <td>Alisson</td>\n      <td>Alisson Ramsés Becker</td>\n      <td>26</td>\n      <td>1992-10-02</td>\n      <td>191</td>\n      <td>91</td>\n      <td>Brazil</td>\n      <td>Liverpool</td>\n      <td>...</td>\n      <td>31+3</td>\n      <td>35+3</td>\n      <td>35+3</td>\n      <td>35+3</td>\n      <td>31+3</td>\n      <td>30+3</td>\n      <td>30+3</td>\n      <td>30+3</td>\n      <td>30+3</td>\n      <td>30+3</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>153079</td>\n      <td>https://sofifa.com/player/153079/sergio-aguero...</td>\n      <td>S. Agüero</td>\n      <td>Sergio Leonel Agüero del Castillo</td>\n      <td>31</td>\n      <td>1988-06-02</td>\n      <td>173</td>\n      <td>70</td>\n      <td>Argentina</td>\n      <td>Manchester City</td>\n      <td>...</td>\n      <td>61+3</td>\n      <td>58+3</td>\n      <td>58+3</td>\n      <td>58+3</td>\n      <td>61+3</td>\n      <td>57+3</td>\n      <td>51+3</td>\n      <td>51+3</td>\n      <td>51+3</td>\n      <td>57+3</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 106 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Preprocessing\nbarplot = df_country.groupby(['nationality'], as_index=False).mean()[['nationality', 'overall']]\nprint(barplot)","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:49:50.494241Z","iopub.execute_input":"2021-08-15T04:49:50.494704Z","iopub.status.idle":"2021-08-15T04:49:50.534616Z","shell.execute_reply.started":"2021-08-15T04:49:50.494663Z","shell.execute_reply":"2021-08-15T04:49:50.533407Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"     nationality    overall\n0      Argentina  69.118510\n1         Brazil  71.143894\n2         Canada  62.855072\n3        England  63.253293\n4  United States  64.538682\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.figure(figsize=(8,4), tight_layout=True)\ncolors = sns.color_palette('pastel')\nplt.bar(barplot['nationality'], barplot['overall'], color=colors[5:])\nplt.xlabel('Nationality')\nplt.ylabel('Average Rating')\nplt.title('Barplot')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:52:22.670356Z","iopub.execute_input":"2021-08-15T04:52:22.671256Z","iopub.status.idle":"2021-08-15T04:52:22.925675Z","shell.execute_reply.started":"2021-08-15T04:52:22.671191Z","shell.execute_reply":"2021-08-15T04:52:22.924384Z"},"trusted":true},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 576x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"# preprocessing\nnew_df = pd.concat(\n[df_country[df_country['nationality']=='Argentina'][:20], \n df_country[df_country['nationality']=='Brazil'][:20], \n df_country[df_country['nationality']=='England'][:20], \n df_country[df_country['nationality']=='Canada'][:20], \n df_country[df_country['nationality']=='United States'][:20]]\n)\nbarplot = new_df.groupby(['nationality'], as_index=False).mean()[['nationality', 'overall']]","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:54:39.493714Z","iopub.execute_input":"2021-08-15T04:54:39.494330Z","iopub.status.idle":"2021-08-15T04:54:39.557879Z","shell.execute_reply.started":"2021-08-15T04:54:39.494261Z","shell.execute_reply":"2021-08-15T04:54:39.556513Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(8,4), tight_layout=True)\nax = sns.barplot(x=barplot['nationality'], y=barplot['overall'], palette='pastel', ci=None)\nax.set(title='Barplot', xlabel='Nationality', ylabel='Average Rating')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T04:55:22.644527Z","iopub.execute_input":"2021-08-15T04:55:22.645046Z","iopub.status.idle":"2021-08-15T04:55:22.918500Z","shell.execute_reply.started":"2021-08-15T04:55:22.644995Z","shell.execute_reply":"2021-08-15T04:55:22.917093Z"},"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 576x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"# Barplot grouped by n variables, preprocessing the data\nbarplot = df_country[df_country['league_name'].isin(['Spain Primera Division', 'Italian Serie A', 'German 1. Bundesliga'])]\nbarplot = barplot.groupby(['nationality', 'league_name'], as_index=False).count()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T05:01:11.393147Z","iopub.execute_input":"2021-08-15T05:01:11.393594Z","iopub.status.idle":"2021-08-15T05:01:11.420519Z","shell.execute_reply.started":"2021-08-15T05:01:11.393559Z","shell.execute_reply":"2021-08-15T05:01:11.418529Z"},"trusted":true},"execution_count":2,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-6e79d1a0af2c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Preprocessing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mbarplot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_country\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf_country\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'league_name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Spain Primera Division'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Italian Serie A'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'German 1. Bundesliga'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mbarplot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbarplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'nationality'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'league_name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df_country' is not defined"],"ename":"NameError","evalue":"name 'df_country' is not defined","output_type":"error"}]},{"cell_type":"code","source":"#The actual barplot by n group\nplt.figure(figsize=(12, 6), tight_layout=True)\nax = sns.barplot(x=barplot['nationality'], y=barplot['sofifa_id'], hue=barplot['league_name'], palette='pastel')\nax.set(title='Nº of Players outside of domestic league' ,xlabel='Country', ylabel='Count')\nax.legend(title='League', title_fontsize='13', loc='upper right')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#histogram\nplt.figure(figsize=(10,6), tight_layout=True)\nbins = [160, 165, 170, 175, 180, 185, 190, 195, 200]\n# matplotlib\nplt.hist(df_country['height_cm'], bins=bins, color=sns.color_palette('Set2')[2], linewidth=2)\nplt.title('Histogram')\nplt.xlabel('Height (cm)')\nplt.ylabel('Count')\n# seaborn\nax = sns.histplot(data=df_country, x='height_cm', bins=bins, color=sns.color_palette('Set2')[2], linewidth=2)\nax.set(title='Histogram', xlabel='Height (cm)', ylabel='Count')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-08-15T05:02:40.838236Z","iopub.execute_input":"2021-08-15T05:02:40.838671Z","iopub.status.idle":"2021-08-15T05:02:40.862728Z","shell.execute_reply.started":"2021-08-15T05:02:40.838638Z","shell.execute_reply":"2021-08-15T05:02:40.861114Z"},"trusted":true},"execution_count":3,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-16b24c2c7cc0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtight_layout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mbins\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m160\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m165\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m170\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m175\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m180\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m185\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m190\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m195\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m200\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# matplotlib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_country\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'height_cm'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolor_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Set2'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlinewidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Histogram'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"],"ename":"NameError","evalue":"name 'plt' is not defined","output_type":"error"}]},{"cell_type":"code","source":"#boxplot\nplt.figure(figsize=(10,6), tight_layout=True)\nax = sns.boxplot(data=df_country, x='nationality', y='height_cm', palette='Set2', linewidth=2.5)\nax.set(title='Boxplot', xlabel='', ylabel='Height (cm)')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Scatterplot\nplt.figure(figsize=(10,6), tight_layout=True)\nax = sns.scatterplot(data=df_country, x='height_cm', y='weight_kg',   hue='nationality', palette='Set2', s=60)\nax.set(xlabel='Height (cm)', ylabel='Weight (kg)')\nax.legend(title='Country', title_fontsize = 12) \nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Single pie chart\n\n#pre-processing the data \npiechart = df_fifa21[df_fifa21['club_name']=='Chelsea']\npiechart = piechart.sort_values('value_eur', ascending=False)[['short_name', 'value_eur']]\npiechart = piechart[:11]\n\n#the pie chart\n\ncolors = sns.color_palette('pastel')\nplt.figure(figsize=(7, 6), tight_layout=True)\nexplode_list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2]\nplt.pie(piechart['value_eur'], labels=piechart['short_name'], autopct='%.0f %%', explode=explode_list, pctdistance=.7,\n          colors=colors, shadow=True)\nplt.title('Chelsea', weight='bold')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Pie chart side by side (subplot)\n\n#subplots\nfig, ax = plt.subplots(1,2, figsize=(12, 5), tight_layout=True)\n\n# Preprocessing\npiechart2 = df_fifa21[df_fifa21['nationality']=='United States']\npiechart2 = piechart2[:10].sort_values('value_eur')[['short_name', 'value_eur']]\n\n#chart\ncolors = sns.color_palette('pastel')\n\nexplode_list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2]\nax[0].pie(piechart['value_eur'], labels=piechart['short_name'], autopct='%.0f %%', explode=explode_list, pctdistance=.7,\n          colors=colors, shadow=True)\nax[0].set_title('Chelsea', weight='bold')\n\nexplode_list = [0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nax[1].pie(piechart2['value_eur'], labels=piechart2['short_name'], autopct='%.0f %%', explode=explode_list, pctdistance=.7,\n          colors=colors, shadow=True)\nax[1].set_title('USA', weight='bold')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#We’ll plot the ratings of the top football players to see how the rating evolved over the past 5 years. To do so, we have to read the Fifa dataset from 2017 and wrangle the data.\n\n# preprocessing\ndf_fifa21 = pd.read_csv('players_21.csv')\ndf_fifa20 = pd.read_csv('players_20.csv')\ndf_fifa19 = pd.read_csv('players_19.csv')\ndf_fifa18 = pd.read_csv('players_18.csv')\ndf_fifa17 = pd.read_csv('players_17.csv')\nframes = [df_fifa17, df_fifa18, df_fifa19, df_fifa20, df_fifa21]\nfor i, frame in enumerate(frames):\n    frame['year'] = 2017 + i\n    \nlineplot = pd.concat(frames)[['short_name', 'overall', 'year']]\nlist_players = ['L. Messi', 'Cristiano Ronaldo', 'K. De Bruyne', 'K. Mbappé', 'V. van Dijk']\nlineplot = lineplot[lineplot['short_name'].isin(list_players)]\nlineplot = lineplot.pivot(index='short_name', columns='year' ,values='overall').T\nlineplot.reset_index(inplace=True)\nlineplot = lineplot.set_index('year')\n\n\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Line Plot\n\n#In Mathplotlib\n\nplt.figure(figsize=(10,6), tight_layout=True)\n#plotting\nplt.plot(lineplot, 'o-', linewidth=2)\n#customization\nplt.xticks([2017, 2018, 2019, 2020, 2021])\nplt.xlabel('Years')\nplt.ylabel('Ratings')\nplt.title('Rating troughtout the years')\nplt.legend(title='Players', title_fontsize = 13, labels=['L. Messi', 'Cristiano Ronaldo', 'K. De Bruyne', 'V. van Dijk', 'K. Mbappé'])\nplt.show()\n\n\n#In Seaborn\n\nplt.figure(figsize=(10, 5))\nax = sns.lineplot(data=lineplot, linewidth=2.5)\nax.set(xlabel='Year', ylabel='Ratings', title='Rating troughtout the years', xticks=[2017, 2018, 2019, 2020, 2021])\nax.legend(title='Players', title_fontsize = 13)\nplt.show()","metadata":{},"execution_count":null,"outputs":[]}]}
